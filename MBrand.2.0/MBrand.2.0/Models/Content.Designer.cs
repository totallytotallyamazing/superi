//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("Content", "WorkGroupWork", "WorkGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MBrand.Models.WorkGroup), "Work", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MBrand.Models.Work), true)]

#endregion

namespace MBrand.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class ContentContainer : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект ContentContainer, используя строку соединения из раздела "ContentContainer" файла конфигурации приложения.
        /// </summary>
        public ContentContainer() : base("name=ContentContainer", "ContentContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ContentContainer.
        /// </summary>
        public ContentContainer(string connectionString) : base(connectionString, "ContentContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ContentContainer.
        /// </summary>
        public ContentContainer(EntityConnection connection) : base(connection, "ContentContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Content> Contents
        {
            get
            {
                if ((_Contents == null))
                {
                    _Contents = base.CreateObjectSet<Content>("Contents");
                }
                return _Contents;
            }
        }
        private ObjectSet<Content> _Contents;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Statement> Statements
        {
            get
            {
                if ((_Statements == null))
                {
                    _Statements = base.CreateObjectSet<Statement>("Statements");
                }
                return _Statements;
            }
        }
        private ObjectSet<Statement> _Statements;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Contents. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToContents(Content content)
        {
            base.AddObject("Contents", content);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Statements. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToStatements(Statement statement)
        {
            base.AddObject("Statements", statement);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Content", Name="Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(WorkGroup))]
    [KnownTypeAttribute(typeof(Work))]
    public partial class Content : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Content.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="text">Исходное значение свойства Text.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="seoDescription">Исходное значение свойства SeoDescription.</param>
        /// <param name="seoKeywords">Исходное значение свойства SeoKeywords.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="desctiption">Исходное значение свойства Desctiption.</param>
        public static Content CreateContent(global::System.Int32 id, global::System.String text, global::System.String name, global::System.String seoDescription, global::System.String seoKeywords, global::System.String title, global::System.String desctiption)
        {
            Content content = new Content();
            content.Id = id;
            content.Text = text;
            content.Name = name;
            content.SeoDescription = seoDescription;
            content.SeoKeywords = seoKeywords;
            content.Title = title;
            content.Desctiption = desctiption;
            return content;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeoDescription
        {
            get
            {
                return _SeoDescription;
            }
            set
            {
                OnSeoDescriptionChanging(value);
                ReportPropertyChanging("SeoDescription");
                _SeoDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeoDescription");
                OnSeoDescriptionChanged();
            }
        }
        private global::System.String _SeoDescription;
        partial void OnSeoDescriptionChanging(global::System.String value);
        partial void OnSeoDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeoKeywords
        {
            get
            {
                return _SeoKeywords;
            }
            set
            {
                OnSeoKeywordsChanging(value);
                ReportPropertyChanging("SeoKeywords");
                _SeoKeywords = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeoKeywords");
                OnSeoKeywordsChanged();
            }
        }
        private global::System.String _SeoKeywords;
        partial void OnSeoKeywordsChanging(global::System.String value);
        partial void OnSeoKeywordsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Desctiption
        {
            get
            {
                return _Desctiption;
            }
            set
            {
                OnDesctiptionChanging(value);
                ReportPropertyChanging("Desctiption");
                _Desctiption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Desctiption");
                OnDesctiptionChanged();
            }
        }
        private global::System.String _Desctiption;
        partial void OnDesctiptionChanging(global::System.String value);
        partial void OnDesctiptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Content", Name="Statement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Statement : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Statement.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="text">Исходное значение свойства Text.</param>
        public static Statement CreateStatement(global::System.Int32 id, global::System.String text)
        {
            Statement statement = new Statement();
            statement.Id = id;
            statement.Text = text;
            return statement;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Content", Name="Work")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Work : Content
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Work.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="text">Исходное значение свойства Text.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="seoDescription">Исходное значение свойства SeoDescription.</param>
        /// <param name="seoKeywords">Исходное значение свойства SeoKeywords.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="desctiption">Исходное значение свойства Desctiption.</param>
        /// <param name="workGroupId">Исходное значение свойства WorkGroupId.</param>
        public static Work CreateWork(global::System.Int32 id, global::System.String text, global::System.String name, global::System.String seoDescription, global::System.String seoKeywords, global::System.String title, global::System.String desctiption, global::System.Int32 workGroupId)
        {
            Work work = new Work();
            work.Id = id;
            work.Text = text;
            work.Name = name;
            work.SeoDescription = seoDescription;
            work.SeoKeywords = seoKeywords;
            work.Title = title;
            work.Desctiption = desctiption;
            work.WorkGroupId = workGroupId;
            return work;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkGroupId
        {
            get
            {
                return _WorkGroupId;
            }
            set
            {
                OnWorkGroupIdChanging(value);
                ReportPropertyChanging("WorkGroupId");
                _WorkGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkGroupId");
                OnWorkGroupIdChanged();
            }
        }
        private global::System.Int32 _WorkGroupId;
        partial void OnWorkGroupIdChanging(global::System.Int32 value);
        partial void OnWorkGroupIdChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Content", "WorkGroupWork", "WorkGroup")]
        public WorkGroup WorkGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkGroup>("Content.WorkGroupWork", "WorkGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkGroup>("Content.WorkGroupWork", "WorkGroup").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkGroup> WorkGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkGroup>("Content.WorkGroupWork", "WorkGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkGroup>("Content.WorkGroupWork", "WorkGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Content", Name="WorkGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkGroup : Content
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта WorkGroup.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="text">Исходное значение свойства Text.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="seoDescription">Исходное значение свойства SeoDescription.</param>
        /// <param name="seoKeywords">Исходное значение свойства SeoKeywords.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="desctiption">Исходное значение свойства Desctiption.</param>
        /// <param name="workId">Исходное значение свойства WorkId.</param>
        public static WorkGroup CreateWorkGroup(global::System.Int32 id, global::System.String text, global::System.String name, global::System.String seoDescription, global::System.String seoKeywords, global::System.String title, global::System.String desctiption, global::System.Int32 workId)
        {
            WorkGroup workGroup = new WorkGroup();
            workGroup.Id = id;
            workGroup.Text = text;
            workGroup.Name = name;
            workGroup.SeoDescription = seoDescription;
            workGroup.SeoKeywords = seoKeywords;
            workGroup.Title = title;
            workGroup.Desctiption = desctiption;
            workGroup.WorkId = workId;
            return workGroup;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkId
        {
            get
            {
                return _WorkId;
            }
            set
            {
                OnWorkIdChanging(value);
                ReportPropertyChanging("WorkId");
                _WorkId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkId");
                OnWorkIdChanged();
            }
        }
        private global::System.Int32 _WorkId;
        partial void OnWorkIdChanging(global::System.Int32 value);
        partial void OnWorkIdChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Content", "WorkGroupWork", "Work")]
        public EntityCollection<Work> Works
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Work>("Content.WorkGroupWork", "Work");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Work>("Content.WorkGroupWork", "Work", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
