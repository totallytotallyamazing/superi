@model MBrand.Models.MBrand.Models.FeedbackFormModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
    <script type="text/javascript">
        function OnCaptchaValidationError() {
            $.get("/Captcha/DrawAsync", function (data) { $("#captchaImage").html(data); });
        }
    </script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>FeedbackFormModel</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Text)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Text)
            @Html.ValidationMessageFor(model => model.Text)
        </div>
        <div id="captchaImage">
            @Html.Action("Draw", new {area="", controller="Captcha"})
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Captcha)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Captcha) @Html.ValidationMessageFor(model => model.Captcha)
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
