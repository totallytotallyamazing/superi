//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("shop_Orders", "OrderOrderItem", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shop.Models.Order), "OrderItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Models.OrderItem))]
[assembly: EdmRelationshipAttribute("shop_Orders", "DeliveryTypeOrder", "DeliveryType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Shop.Models.DeliveryType), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Models.Order))]
[assembly: EdmRelationshipAttribute("shop_Orders", "DeliveryTypePaymentType", "DeliveryType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Models.DeliveryType), "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Models.PaymentType))]
[assembly: EdmRelationshipAttribute("shop_Orders", "PaymentTypeOrder", "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Shop.Models.PaymentType), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Models.Order))]
[assembly: EdmRelationshipAttribute("shop_Orders", "PaymentTypePaymentProperty", "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shop.Models.PaymentType), "PaymentProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Models.PaymentProperty))]
[assembly: EdmRelationshipAttribute("shop_Orders", "PaymentPropertyPaymentPropertyValue", "PaymentProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shop.Models.PaymentProperty), "PaymentPropertyValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Models.PaymentPropertyValue))]
[assembly: EdmRelationshipAttribute("shop_Orders", "OrderPaymentPropertyValue", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shop.Models.Order), "PaymentPropertyValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Models.PaymentPropertyValue))]

#endregion

namespace Shop.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class OrdersStorage : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект OrdersStorage, используя строку соединения из раздела "OrdersStorage" файла конфигурации приложения.
        /// </summary>
        public OrdersStorage() : base("name=OrdersStorage", "OrdersStorage")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта OrdersStorage.
        /// </summary>
        public OrdersStorage(string connectionString) : base(connectionString, "OrdersStorage")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта OrdersStorage.
        /// </summary>
        public OrdersStorage(EntityConnection connection) : base(connection, "OrdersStorage")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrderItem> OrderItems
        {
            get
            {
                if ((_OrderItems == null))
                {
                    _OrderItems = base.CreateObjectSet<OrderItem>("OrderItems");
                }
                return _OrderItems;
            }
        }
        private ObjectSet<OrderItem> _OrderItems;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DeliveryType> DeliveryTypes
        {
            get
            {
                if ((_DeliveryTypes == null))
                {
                    _DeliveryTypes = base.CreateObjectSet<DeliveryType>("DeliveryTypes");
                }
                return _DeliveryTypes;
            }
        }
        private ObjectSet<DeliveryType> _DeliveryTypes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PaymentProperty> PaymentProperties
        {
            get
            {
                if ((_PaymentProperties == null))
                {
                    _PaymentProperties = base.CreateObjectSet<PaymentProperty>("PaymentProperties");
                }
                return _PaymentProperties;
            }
        }
        private ObjectSet<PaymentProperty> _PaymentProperties;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PaymentPropertyValue> PaymentPropertyValues
        {
            get
            {
                if ((_PaymentPropertyValues == null))
                {
                    _PaymentPropertyValues = base.CreateObjectSet<PaymentPropertyValue>("PaymentPropertyValues");
                }
                return _PaymentPropertyValues;
            }
        }
        private ObjectSet<PaymentPropertyValue> _PaymentPropertyValues;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PaymentType> PaymentTypes
        {
            get
            {
                if ((_PaymentTypes == null))
                {
                    _PaymentTypes = base.CreateObjectSet<PaymentType>("PaymentTypes");
                }
                return _PaymentTypes;
            }
        }
        private ObjectSet<PaymentType> _PaymentTypes;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Orders. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OrderItems. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrderItems(OrderItem orderItem)
        {
            base.AddObject("OrderItems", orderItem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DeliveryTypes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDeliveryTypes(DeliveryType deliveryType)
        {
            base.AddObject("DeliveryTypes", deliveryType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PaymentProperties. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPaymentProperties(PaymentProperty paymentProperty)
        {
            base.AddObject("PaymentProperties", paymentProperty);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PaymentPropertyValues. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPaymentPropertyValues(PaymentPropertyValue paymentPropertyValue)
        {
            base.AddObject("PaymentPropertyValues", paymentPropertyValue);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PaymentTypes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPaymentTypes(PaymentType paymentType)
        {
            base.AddObject("PaymentTypes", paymentType);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shop_Orders", Name="DeliveryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeliveryType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DeliveryType.
        /// </summary>
        /// <param name="disabled">Исходное значение свойства Disabled.</param>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static DeliveryType CreateDeliveryType(global::System.Boolean disabled, global::System.Int32 id, global::System.String name)
        {
            DeliveryType deliveryType = new DeliveryType();
            deliveryType.Disabled = disabled;
            deliveryType.Id = id;
            deliveryType.Name = name;
            return deliveryType;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Disabled
        {
            get
            {
                return _Disabled;
            }
            set
            {
                OnDisabledChanging(value);
                ReportPropertyChanging("Disabled");
                _Disabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disabled");
                OnDisabledChanged();
            }
        }
        private global::System.Boolean _Disabled;
        partial void OnDisabledChanging(global::System.Boolean value);
        partial void OnDisabledChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> AdditionalFee
        {
            get
            {
                return _AdditionalFee;
            }
            set
            {
                OnAdditionalFeeChanging(value);
                ReportPropertyChanging("AdditionalFee");
                _AdditionalFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdditionalFee");
                OnAdditionalFeeChanged();
            }
        }
        private Nullable<global::System.Single> _AdditionalFee;
        partial void OnAdditionalFeeChanging(Nullable<global::System.Single> value);
        partial void OnAdditionalFeeChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "DeliveryTypeOrder", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("shop_Orders.DeliveryTypeOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("shop_Orders.DeliveryTypeOrder", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "DeliveryTypePaymentType", "PaymentType")]
        public EntityCollection<PaymentType> PaymentTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentType>("shop_Orders.DeliveryTypePaymentType", "PaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentType>("shop_Orders.DeliveryTypePaymentType", "PaymentType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shop_Orders", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Order.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Order CreateOrder(global::System.Int32 id)
        {
            Order order = new Order();
            order.Id = id;
            return order;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdditionalDeliveryInfo
        {
            get
            {
                return _AdditionalDeliveryInfo;
            }
            set
            {
                OnAdditionalDeliveryInfoChanging(value);
                ReportPropertyChanging("AdditionalDeliveryInfo");
                _AdditionalDeliveryInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdditionalDeliveryInfo");
                OnAdditionalDeliveryInfoChanged();
            }
        }
        private global::System.String _AdditionalDeliveryInfo;
        partial void OnAdditionalDeliveryInfoChanging(global::System.String value);
        partial void OnAdditionalDeliveryInfoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdditionalProperties
        {
            get
            {
                return _AdditionalProperties;
            }
            set
            {
                OnAdditionalPropertiesChanging(value);
                ReportPropertyChanging("AdditionalProperties");
                _AdditionalProperties = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdditionalProperties");
                OnAdditionalPropertiesChanged();
            }
        }
        private global::System.String _AdditionalProperties;
        partial void OnAdditionalPropertiesChanging(global::System.String value);
        partial void OnAdditionalPropertiesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillingEmail
        {
            get
            {
                return _BillingEmail;
            }
            set
            {
                OnBillingEmailChanging(value);
                ReportPropertyChanging("BillingEmail");
                _BillingEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BillingEmail");
                OnBillingEmailChanged();
            }
        }
        private global::System.String _BillingEmail;
        partial void OnBillingEmailChanging(global::System.String value);
        partial void OnBillingEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillingName
        {
            get
            {
                return _BillingName;
            }
            set
            {
                OnBillingNameChanging(value);
                ReportPropertyChanging("BillingName");
                _BillingName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BillingName");
                OnBillingNameChanged();
            }
        }
        private global::System.String _BillingName;
        partial void OnBillingNameChanging(global::System.String value);
        partial void OnBillingNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillingPhone
        {
            get
            {
                return _BillingPhone;
            }
            set
            {
                OnBillingPhoneChanging(value);
                ReportPropertyChanging("BillingPhone");
                _BillingPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BillingPhone");
                OnBillingPhoneChanged();
            }
        }
        private global::System.String _BillingPhone;
        partial void OnBillingPhoneChanging(global::System.String value);
        partial void OnBillingPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeliveryAddress
        {
            get
            {
                return _DeliveryAddress;
            }
            set
            {
                OnDeliveryAddressChanging(value);
                ReportPropertyChanging("DeliveryAddress");
                _DeliveryAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeliveryAddress");
                OnDeliveryAddressChanged();
            }
        }
        private global::System.String _DeliveryAddress;
        partial void OnDeliveryAddressChanging(global::System.String value);
        partial void OnDeliveryAddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeliveryName
        {
            get
            {
                return _DeliveryName;
            }
            set
            {
                OnDeliveryNameChanging(value);
                ReportPropertyChanging("DeliveryName");
                _DeliveryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeliveryName");
                OnDeliveryNameChanged();
            }
        }
        private global::System.String _DeliveryName;
        partial void OnDeliveryNameChanging(global::System.String value);
        partial void OnDeliveryNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeliveryPhone
        {
            get
            {
                return _DeliveryPhone;
            }
            set
            {
                OnDeliveryPhoneChanging(value);
                ReportPropertyChanging("DeliveryPhone");
                _DeliveryPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeliveryPhone");
                OnDeliveryPhoneChanged();
            }
        }
        private global::System.String _DeliveryPhone;
        partial void OnDeliveryPhoneChanging(global::System.String value);
        partial void OnDeliveryPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OrderDate;
        partial void OnOrderDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniqueId
        {
            get
            {
                return _UniqueId;
            }
            set
            {
                OnUniqueIdChanging(value);
                ReportPropertyChanging("UniqueId");
                _UniqueId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniqueId");
                OnUniqueIdChanged();
            }
        }
        private global::System.String _UniqueId;
        partial void OnUniqueIdChanging(global::System.String value);
        partial void OnUniqueIdChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "OrderOrderItem", "OrderItem")]
        public EntityCollection<OrderItem> OrderItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItem>("shop_Orders.OrderOrderItem", "OrderItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItem>("shop_Orders.OrderOrderItem", "OrderItem", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "DeliveryTypeOrder", "DeliveryType")]
        public DeliveryType DeliveryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeliveryType>("shop_Orders.DeliveryTypeOrder", "DeliveryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeliveryType>("shop_Orders.DeliveryTypeOrder", "DeliveryType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeliveryType> DeliveryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeliveryType>("shop_Orders.DeliveryTypeOrder", "DeliveryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeliveryType>("shop_Orders.DeliveryTypeOrder", "DeliveryType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "PaymentTypeOrder", "PaymentType")]
        public PaymentType PaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("shop_Orders.PaymentTypeOrder", "PaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("shop_Orders.PaymentTypeOrder", "PaymentType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentType> PaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("shop_Orders.PaymentTypeOrder", "PaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentType>("shop_Orders.PaymentTypeOrder", "PaymentType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "OrderPaymentPropertyValue", "PaymentPropertyValue")]
        public EntityCollection<PaymentPropertyValue> PaymentPropertyValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentPropertyValue>("shop_Orders.OrderPaymentPropertyValue", "PaymentPropertyValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentPropertyValue>("shop_Orders.OrderPaymentPropertyValue", "PaymentPropertyValue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shop_Orders", Name="OrderItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderItem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrderItem.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="price">Исходное значение свойства Price.</param>
        /// <param name="productId">Исходное значение свойства ProductId.</param>
        /// <param name="quantity">Исходное значение свойства Quantity.</param>
        public static OrderItem CreateOrderItem(global::System.Int32 id, global::System.Single price, global::System.Int32 productId, global::System.Int32 quantity)
        {
            OrderItem orderItem = new OrderItem();
            orderItem.Id = id;
            orderItem.Price = price;
            orderItem.ProductId = productId;
            orderItem.Quantity = quantity;
            return orderItem;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Single _Price;
        partial void OnPriceChanging(global::System.Single value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductAttributes
        {
            get
            {
                return _ProductAttributes;
            }
            set
            {
                OnProductAttributesChanging(value);
                ReportPropertyChanging("ProductAttributes");
                _ProductAttributes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductAttributes");
                OnProductAttributesChanged();
            }
        }
        private global::System.String _ProductAttributes;
        partial void OnProductAttributesChanging(global::System.String value);
        partial void OnProductAttributesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "OrderOrderItem", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("shop_Orders.OrderOrderItem", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("shop_Orders.OrderOrderItem", "Order").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("shop_Orders.OrderOrderItem", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("shop_Orders.OrderOrderItem", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shop_Orders", Name="PaymentProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentProperty : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PaymentProperty.
        /// </summary>
        /// <param name="disabled">Исходное значение свойства Disabled.</param>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static PaymentProperty CreatePaymentProperty(global::System.Boolean disabled, global::System.Int32 id, global::System.String name)
        {
            PaymentProperty paymentProperty = new PaymentProperty();
            paymentProperty.Disabled = disabled;
            paymentProperty.Id = id;
            paymentProperty.Name = name;
            return paymentProperty;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Disabled
        {
            get
            {
                return _Disabled;
            }
            set
            {
                OnDisabledChanging(value);
                ReportPropertyChanging("Disabled");
                _Disabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disabled");
                OnDisabledChanged();
            }
        }
        private global::System.Boolean _Disabled;
        partial void OnDisabledChanging(global::System.Boolean value);
        partial void OnDisabledChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "PaymentTypePaymentProperty", "PaymentType")]
        public PaymentType PaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("shop_Orders.PaymentTypePaymentProperty", "PaymentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("shop_Orders.PaymentTypePaymentProperty", "PaymentType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentType> PaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("shop_Orders.PaymentTypePaymentProperty", "PaymentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentType>("shop_Orders.PaymentTypePaymentProperty", "PaymentType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "PaymentPropertyPaymentPropertyValue", "PaymentPropertyValue")]
        public EntityCollection<PaymentPropertyValue> PaymentPropertyValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentPropertyValue>("shop_Orders.PaymentPropertyPaymentPropertyValue", "PaymentPropertyValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentPropertyValue>("shop_Orders.PaymentPropertyPaymentPropertyValue", "PaymentPropertyValue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shop_Orders", Name="PaymentPropertyValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentPropertyValue : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PaymentPropertyValue.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static PaymentPropertyValue CreatePaymentPropertyValue(global::System.Int32 id)
        {
            PaymentPropertyValue paymentPropertyValue = new PaymentPropertyValue();
            paymentPropertyValue.Id = id;
            return paymentPropertyValue;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "PaymentPropertyPaymentPropertyValue", "PaymentProperty")]
        public PaymentProperty PaymentProperty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentProperty>("shop_Orders.PaymentPropertyPaymentPropertyValue", "PaymentProperty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentProperty>("shop_Orders.PaymentPropertyPaymentPropertyValue", "PaymentProperty").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentProperty> PaymentPropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentProperty>("shop_Orders.PaymentPropertyPaymentPropertyValue", "PaymentProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentProperty>("shop_Orders.PaymentPropertyPaymentPropertyValue", "PaymentProperty", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "OrderPaymentPropertyValue", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("shop_Orders.OrderPaymentPropertyValue", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("shop_Orders.OrderPaymentPropertyValue", "Order").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("shop_Orders.OrderPaymentPropertyValue", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("shop_Orders.OrderPaymentPropertyValue", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shop_Orders", Name="PaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PaymentType.
        /// </summary>
        /// <param name="disabled">Исходное значение свойства Disabled.</param>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="hasDocument">Исходное значение свойства HasDocument.</param>
        public static PaymentType CreatePaymentType(global::System.Boolean disabled, global::System.Int32 id, global::System.String name, global::System.Boolean hasDocument)
        {
            PaymentType paymentType = new PaymentType();
            paymentType.Disabled = disabled;
            paymentType.Id = id;
            paymentType.Name = name;
            paymentType.HasDocument = hasDocument;
            return paymentType;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Disabled
        {
            get
            {
                return _Disabled;
            }
            set
            {
                OnDisabledChanging(value);
                ReportPropertyChanging("Disabled");
                _Disabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disabled");
                OnDisabledChanged();
            }
        }
        private global::System.Boolean _Disabled;
        partial void OnDisabledChanging(global::System.Boolean value);
        partial void OnDisabledChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentCaption
        {
            get
            {
                return _DocumentCaption;
            }
            set
            {
                OnDocumentCaptionChanging(value);
                ReportPropertyChanging("DocumentCaption");
                _DocumentCaption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentCaption");
                OnDocumentCaptionChanged();
            }
        }
        private global::System.String _DocumentCaption;
        partial void OnDocumentCaptionChanging(global::System.String value);
        partial void OnDocumentCaptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasDocument
        {
            get
            {
                return _HasDocument;
            }
            set
            {
                OnHasDocumentChanging(value);
                ReportPropertyChanging("HasDocument");
                _HasDocument = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasDocument");
                OnHasDocumentChanged();
            }
        }
        private global::System.Boolean _HasDocument;
        partial void OnHasDocumentChanging(global::System.Boolean value);
        partial void OnHasDocumentChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "DeliveryTypePaymentType", "DeliveryType")]
        public EntityCollection<DeliveryType> DeliveryTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeliveryType>("shop_Orders.DeliveryTypePaymentType", "DeliveryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeliveryType>("shop_Orders.DeliveryTypePaymentType", "DeliveryType", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "PaymentTypeOrder", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("shop_Orders.PaymentTypeOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("shop_Orders.PaymentTypeOrder", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_Orders", "PaymentTypePaymentProperty", "PaymentProperty")]
        public EntityCollection<PaymentProperty> PaymentProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PaymentProperty>("shop_Orders.PaymentTypePaymentProperty", "PaymentProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PaymentProperty>("shop_Orders.PaymentTypePaymentProperty", "PaymentProperty", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
