//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("gb_listelliModel", "FK_PortfolioImage_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shop.Models.Portfolio), "PortfolioImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Models.PortfolioImage), true)]
[assembly: EdmRelationshipAttribute("gb_listelliModel", "FK_PortfolioImage_PortfolioImage", "PortfolioImage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shop.Models.PortfolioImage), "PortfolioImage1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Shop.Models.PortfolioImage), true)]

#endregion

namespace Shop.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PortfolioStorage : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PortfolioStorage object using the connection string found in the 'PortfolioStorage' section of the application configuration file.
        /// </summary>
        public PortfolioStorage() : base("name=PortfolioStorage", "PortfolioStorage")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PortfolioStorage object.
        /// </summary>
        public PortfolioStorage(string connectionString) : base(connectionString, "PortfolioStorage")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PortfolioStorage object.
        /// </summary>
        public PortfolioStorage(EntityConnection connection) : base(connection, "PortfolioStorage")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Portfolio> Portfolio
        {
            get
            {
                if ((_Portfolio == null))
                {
                    _Portfolio = base.CreateObjectSet<Portfolio>("Portfolio");
                }
                return _Portfolio;
            }
        }
        private ObjectSet<Portfolio> _Portfolio;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioImage> PortfolioImage
        {
            get
            {
                if ((_PortfolioImage == null))
                {
                    _PortfolioImage = base.CreateObjectSet<PortfolioImage>("PortfolioImage");
                }
                return _PortfolioImage;
            }
        }
        private ObjectSet<PortfolioImage> _PortfolioImage;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Portfolio EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolio(Portfolio portfolio)
        {
            base.AddObject("Portfolio", portfolio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioImage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioImage(PortfolioImage portfolioImage)
        {
            base.AddObject("PortfolioImage", portfolioImage);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_listelliModel", Name="Portfolio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Portfolio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Portfolio object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static Portfolio CreatePortfolio(global::System.Int32 id, global::System.String userName)
        {
            Portfolio portfolio = new Portfolio();
            portfolio.Id = id;
            portfolio.UserName = userName;
            return portfolio;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_listelliModel", "FK_PortfolioImage_Portfolio", "PortfolioImage")]
        public EntityCollection<PortfolioImage> PortfolioImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioImage>("gb_listelliModel.FK_PortfolioImage_Portfolio", "PortfolioImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioImage>("gb_listelliModel.FK_PortfolioImage_Portfolio", "PortfolioImage", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gb_listelliModel", Name="PortfolioImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioImage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="portfolioId">Initial value of the PortfolioId property.</param>
        /// <param name="imageSource">Initial value of the ImageSource property.</param>
        public static PortfolioImage CreatePortfolioImage(global::System.Int32 id, global::System.Int32 portfolioId, global::System.String imageSource)
        {
            PortfolioImage portfolioImage = new PortfolioImage();
            portfolioImage.Id = id;
            portfolioImage.PortfolioId = portfolioId;
            portfolioImage.ImageSource = imageSource;
            return portfolioImage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortfolioId
        {
            get
            {
                return _PortfolioId;
            }
            set
            {
                OnPortfolioIdChanging(value);
                ReportPropertyChanging("PortfolioId");
                _PortfolioId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioId");
                OnPortfolioIdChanged();
            }
        }
        private global::System.Int32 _PortfolioId;
        partial void OnPortfolioIdChanging(global::System.Int32 value);
        partial void OnPortfolioIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageSource
        {
            get
            {
                return _ImageSource;
            }
            set
            {
                OnImageSourceChanging(value);
                ReportPropertyChanging("ImageSource");
                _ImageSource = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageSource");
                OnImageSourceChanged();
            }
        }
        private global::System.String _ImageSource;
        partial void OnImageSourceChanging(global::System.String value);
        partial void OnImageSourceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_listelliModel", "FK_PortfolioImage_Portfolio", "Portfolio")]
        public Portfolio Portfolio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("gb_listelliModel.FK_PortfolioImage_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("gb_listelliModel.FK_PortfolioImage_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> PortfolioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("gb_listelliModel.FK_PortfolioImage_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("gb_listelliModel.FK_PortfolioImage_Portfolio", "Portfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gb_listelliModel", "FK_PortfolioImage_PortfolioImage", "PortfolioImage1")]
        public PortfolioImage PortfolioImage1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioImage>("gb_listelliModel.FK_PortfolioImage_PortfolioImage", "PortfolioImage1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioImage>("gb_listelliModel.FK_PortfolioImage_PortfolioImage", "PortfolioImage1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PortfolioImage> PortfolioImage1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioImage>("gb_listelliModel.FK_PortfolioImage_PortfolioImage", "PortfolioImage1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PortfolioImage>("gb_listelliModel.FK_PortfolioImage_PortfolioImage", "PortfolioImage1", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
