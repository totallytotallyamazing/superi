<?xml version="1.0" encoding="utf-8"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <appSettings file="~/Configuration/Web.config" />
  <connectionStrings>
    <add name="ShopStorage" connectionString="metadata=res://*/Models.Shop.csdl|res://*/Models.Shop.ssdl|res://*/Models.Shop.msl;provider=MySql.Data.MySqlClient;provider connection string=&quot;server=mysql305.1gb.ua;user id=gbua_x_madame;password=7d2b8adf;persist security info=True;database=gbua_x_madame;&quot;" providerName="System.Data.EntityClient" />
    <add name="ContentStorage" connectionString="metadata=res://*/Models.Content.csdl|res://*/Models.Content.ssdl|res://*/Models.Content.msl;provider=MySql.Data.MySqlClient;provider connection string=&quot;server=mysql305.1gb.ua;user id=gbua_x_madame;password=7d2b8adf;persist security info=True;database=gbua_x_madame;&quot;" providerName="System.Data.EntityClient" />
    <add name="OrdersStorage" connectionString="metadata=res://*/Models.Orders.csdl|res://*/Models.Orders.ssdl|res://*/Models.Orders.msl;provider=MySql.Data.MySqlClient;provider connection string=&quot;server=mysql305.1gb.ua;user id=gbua_x_madame;password=7d2b8adf;persist security info=True;database=gbua_x_madame;&quot;" providerName="System.Data.EntityClient" />
    <add name="ApplicationServices" connectionString="server=mysql305.1gb.ua;user id=gbua_x_madame;password=7d2b8adf;persist security info=True;database=gbua_x_madame;" providerName="MySql.Data.MySqlClient" />
  </connectionStrings>
  <system.data>
    <DbProviderFactories>
      <clear />
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data" />
    </DbProviderFactories>
  </system.data>
  <system.net>
    <mailSettings>
      <smtp from="admin@madame.com.ua">
        <network host="smtp-5.1gb.ua" userName="u51645" password="a07f1435" port="25" />
      </smtp>
    </mailSettings>
  </system.net>
  <system.web>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
    -->
    <globalization culture="ru-RU" uiCulture="ru-RU" />
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
    -->
    <sessionState timeout="60"></sessionState>
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" timeout="2880" name=".LADY" />
    </authentication>
    <membership defaultProvider="MySQLMembershipProvider">
      <providers>
        <clear />
        <remove name="MySQLMembershipProvider" />
        <add name="MySQLMembershipProvider" type="MySql.Web.Security.MySQLMembershipProvider, MySql.Web, Version=6.4.4.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" applicationName="/" description="MySQL default application" connectionStringName="ApplicationServices" writeExceptionsToEventLog="False" autogenerateschema="True" enablePasswordRetrieval="False" enablePasswordReset="True" requiresQuestionAndAnswer="False" requiresUniqueEmail="True" passwordFormat="Clear" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" />
      </providers>
    </membership>
    <profile defaultProvider="MySQLProfileProvider">
      <providers>
        <clear />
        <remove name="MySQLProfileProvider" />
        <add name="MySQLProfileProvider" type="MySql.Web.Profile.MySQLProfileProvider, MySql.Web, Version=6.4.4.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" applicationName="/" description="" connectionStringName="ApplicationServices" writeExceptionsToEventLog="False" autogenerateschema="True" />
      </providers>
      <properties>
        <clear />
        <add name="Name" type="System.String" />
        <add name="Phone" type="System.String" />
        <add name="Subway" type="System.String" />
        <add name="Address" type="System.String" />
        <add name="DeliveryAddress" type="System.String" />
      </properties>
    </profile>
    <roleManager enabled="true" defaultProvider="MySQLRoleProvider">
      <providers>
        <clear />
        <add applicationName="/" name="AspNetWindowsTokenRoleProvider" type="System.Web.Security.WindowsTokenRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        <remove name="MySQLRoleProvider" />
        <add name="MySQLRoleProvider" type="MySql.Web.Security.MySQLRoleProvider, MySql.Web, Version=6.4.4.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" applicationName="/" description="" connectionStringName="ApplicationServices" writeExceptionsToEventLog="False" autogenerateschema="True" />
      </providers>
    </roleManager>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.
    -->
    <!--<customErrors mode="Off">
    </customErrors>-->
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
      <namespaces>
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Linq" />
        <add namespace="System.Collections.Generic" />
      </namespaces>
    </pages>
    <httpHandlers>
      <add verb="GET" path="captcha.ashx" validate="false" type="Dev.Helpers.CaptchaImageHandler" />
    </httpHandlers>
  </system.web>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true"></modules>
    <handlers>
      <remove name="UrlRoutingHandler" />
      <add name="Captcha" verb="GET" path="captcha.ashx" type="Dev.Helpers.CaptchaImageHandler" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>