//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace Tina.RichServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GalleryImagePresentation", Namespace="http://tempuri.org/")]
    public partial class GalleryImagePresentation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private int AlbumIdField;
        
        private string PictureField;
        
        private string ThumbnailField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int AlbumId {
            get {
                return this.AlbumIdField;
            }
            set {
                if ((this.AlbumIdField.Equals(value) != true)) {
                    this.AlbumIdField = value;
                    this.RaisePropertyChanged("AlbumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RichServiceReference.RichServiceSoap")]
    public interface RichServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetGallery", ReplyAction="*")]
        System.IAsyncResult BeginGetGallery(Tina.RichServiceReference.GetGalleryRequest request, System.AsyncCallback callback, object asyncState);
        
        Tina.RichServiceReference.GetGalleryResponse EndGetGallery(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetGalleryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetGallery", Namespace="http://tempuri.org/", Order=0)]
        public Tina.RichServiceReference.GetGalleryRequestBody Body;
        
        public GetGalleryRequest() {
        }
        
        public GetGalleryRequest(Tina.RichServiceReference.GetGalleryRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetGalleryRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int albumId;
        
        public GetGalleryRequestBody() {
        }
        
        public GetGalleryRequestBody(int albumId) {
            this.albumId = albumId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetGalleryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetGalleryResponse", Namespace="http://tempuri.org/", Order=0)]
        public Tina.RichServiceReference.GetGalleryResponseBody Body;
        
        public GetGalleryResponse() {
        }
        
        public GetGalleryResponse(Tina.RichServiceReference.GetGalleryResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetGalleryResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Tina.RichServiceReference.GalleryImagePresentation> GetGalleryResult;
        
        public GetGalleryResponseBody() {
        }
        
        public GetGalleryResponseBody(System.Collections.ObjectModel.ObservableCollection<Tina.RichServiceReference.GalleryImagePresentation> GetGalleryResult) {
            this.GetGalleryResult = GetGalleryResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface RichServiceSoapChannel : Tina.RichServiceReference.RichServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetGalleryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGalleryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Tina.RichServiceReference.GalleryImagePresentation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Tina.RichServiceReference.GalleryImagePresentation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class RichServiceSoapClient : System.ServiceModel.ClientBase<Tina.RichServiceReference.RichServiceSoap>, Tina.RichServiceReference.RichServiceSoap {
        
        private BeginOperationDelegate onBeginGetGalleryDelegate;
        
        private EndOperationDelegate onEndGetGalleryDelegate;
        
        private System.Threading.SendOrPostCallback onGetGalleryCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RichServiceSoapClient() {
        }
        
        public RichServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RichServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RichServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RichServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetGalleryCompletedEventArgs> GetGalleryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Tina.RichServiceReference.RichServiceSoap.BeginGetGallery(Tina.RichServiceReference.GetGalleryRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGallery(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetGallery(int albumId, System.AsyncCallback callback, object asyncState) {
            Tina.RichServiceReference.GetGalleryRequest inValue = new Tina.RichServiceReference.GetGalleryRequest();
            inValue.Body = new Tina.RichServiceReference.GetGalleryRequestBody();
            inValue.Body.albumId = albumId;
            return ((Tina.RichServiceReference.RichServiceSoap)(this)).BeginGetGallery(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Tina.RichServiceReference.GetGalleryResponse Tina.RichServiceReference.RichServiceSoap.EndGetGallery(System.IAsyncResult result) {
            return base.Channel.EndGetGallery(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<Tina.RichServiceReference.GalleryImagePresentation> EndGetGallery(System.IAsyncResult result) {
            Tina.RichServiceReference.GetGalleryResponse retVal = ((Tina.RichServiceReference.RichServiceSoap)(this)).EndGetGallery(result);
            return retVal.Body.GetGalleryResult;
        }
        
        private System.IAsyncResult OnBeginGetGallery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int albumId = ((int)(inValues[0]));
            return this.BeginGetGallery(albumId, callback, asyncState);
        }
        
        private object[] OnEndGetGallery(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Tina.RichServiceReference.GalleryImagePresentation> retVal = this.EndGetGallery(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGalleryCompleted(object state) {
            if ((this.GetGalleryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGalleryCompleted(this, new GetGalleryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGalleryAsync(int albumId) {
            this.GetGalleryAsync(albumId, null);
        }
        
        public void GetGalleryAsync(int albumId, object userState) {
            if ((this.onBeginGetGalleryDelegate == null)) {
                this.onBeginGetGalleryDelegate = new BeginOperationDelegate(this.OnBeginGetGallery);
            }
            if ((this.onEndGetGalleryDelegate == null)) {
                this.onEndGetGalleryDelegate = new EndOperationDelegate(this.OnEndGetGallery);
            }
            if ((this.onGetGalleryCompletedDelegate == null)) {
                this.onGetGalleryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGalleryCompleted);
            }
            base.InvokeAsync(this.onBeginGetGalleryDelegate, new object[] {
                        albumId}, this.onEndGetGalleryDelegate, this.onGetGalleryCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Tina.RichServiceReference.RichServiceSoap CreateChannel() {
            return new RichServiceSoapClientChannel(this);
        }
        
        private class RichServiceSoapClientChannel : ChannelBase<Tina.RichServiceReference.RichServiceSoap>, Tina.RichServiceReference.RichServiceSoap {
            
            public RichServiceSoapClientChannel(System.ServiceModel.ClientBase<Tina.RichServiceReference.RichServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetGallery(Tina.RichServiceReference.GetGalleryRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetGallery", _args, callback, asyncState);
                return _result;
            }
            
            public Tina.RichServiceReference.GetGalleryResponse EndGetGallery(System.IAsyncResult result) {
                object[] _args = new object[0];
                Tina.RichServiceReference.GetGalleryResponse _result = ((Tina.RichServiceReference.GetGalleryResponse)(base.EndInvoke("GetGallery", _args, result)));
                return _result;
            }
        }
    }
}
