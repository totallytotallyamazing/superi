<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CarSearch" xml:space="preserve">
    <value>Поиск автомобиля</value>
  </data>
  <data name="Catalogue" xml:space="preserve">
    <value>Каталог</value>
  </data>
  <data name="Business" xml:space="preserve">
    <value>Бизнес</value>
  </data>
  <data name="Classes" xml:space="preserve">
    <value>Классы</value>
  </data>
  <data name="Middle" xml:space="preserve">
    <value>Средний</value>
  </data>
  <data name="Minivan" xml:space="preserve">
    <value>Минивены</value>
  </data>
  <data name="Multivan" xml:space="preserve">
    <value>Мультивены</value>
  </data>
  <data name="Standard" xml:space="preserve">
    <value>Стандартный</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>Условия</value>
  </data>
  <data name="Contacts" xml:space="preserve">
    <value>Связь</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>© 2010 Трансфер-сервис “TRIPS”</value>
  </data>
  <data name="Design" xml:space="preserve">
    <value>дизайн</value>
  </data>
  <data name="LanguageSwitch" xml:space="preserve">
    <value>in english</value>
  </data>
  <data name="Lux" xml:space="preserve">
    <value>Люкс</value>
  </data>
  <data name="MBrand" xml:space="preserve">
    <value>М.бренд</value>
  </data>
  <data name="Phones" xml:space="preserve">
    <value>Наши телефоны</value>
  </data>
  <data name="Request" xml:space="preserve">
    <value>Заявка</value>
  </data>
  <data name="OurCatalogue" xml:space="preserve">
    <value>Каталог наших автомобилей</value>
  </data>
  <data name="AddCar" xml:space="preserve">
    <value>Добавить в заявку</value>
  </data>
  <data name="WasAdded" xml:space="preserve">
    <value>был добавлен в заявку</value>
  </data>
  <data name="ProceedOrder" xml:space="preserve">
    <value>Перейти к оформлению заявки</value>
  </data>
  <data name="ReturnToCatalogue" xml:space="preserve">
    <value>Вернуться в каталог</value>
  </data>
  <data name="Step" xml:space="preserve">
    <value>Шаг</value>
  </data>
  <data name="AboutTheTrip" xml:space="preserve">
    <value>О поездке</value>
  </data>
  <data name="ApproximatePrice" xml:space="preserve">
    <value>Приблизительная цена поездки</value>
  </data>
  <data name="Calculation" xml:space="preserve">
    <value>Просчитано</value>
  </data>
  <data name="CalculationFor" xml:space="preserve">
    <value>Просчитано для</value>
  </data>
  <data name="Car" xml:space="preserve">
    <value>Автомобиль</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="Distance" xml:space="preserve">
    <value>Расстояние</value>
  </data>
  <data name="Dollars" xml:space="preserve">
    <value>долларах</value>
  </data>
  <data name="EnterCityName" xml:space="preserve">
    <value>название города</value>
  </data>
  <data name="EUR" xml:space="preserve">
    <value>евро</value>
  </data>
  <data name="Euro" xml:space="preserve">
    <value>евро</value>
  </data>
  <data name="Km" xml:space="preserve">
    <value>км</value>
  </data>
  <data name="MoreDetails" xml:space="preserve">
    <value>Детальнее о маршруте</value>
  </data>
  <data name="MoreDetailsExplanation" xml:space="preserve">
    <value>Например, места, куда планируете заезжать по пути</value>
  </data>
  <data name="NumberOfCars" xml:space="preserve">
    <value>Количество автомобилей</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>Или</value>
  </data>
  <data name="RecountIn" xml:space="preserve">
    <value>Пересчитать в</value>
  </data>
  <data name="Ruble" xml:space="preserve">
    <value>рублях</value>
  </data>
  <data name="RUR" xml:space="preserve">
    <value>руб.</value>
  </data>
  <data name="StartingPoint" xml:space="preserve">
    <value>Откуда</value>
  </data>
  <data name="UAH" xml:space="preserve">
    <value>грн</value>
  </data>
  <data name="USD" xml:space="preserve">
    <value>usd</value>
  </data>
  <data name="WhereToGo" xml:space="preserve">
    <value>Куда</value>
  </data>
  <data name="AllNews" xml:space="preserve">
    <value>Все новости</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>Новости</value>
  </data>
  <data name="BusinessClass" xml:space="preserve">
    <value>Бизнес-класс</value>
  </data>
  <data name="ClassBusinessCalculation" xml:space="preserve">
    <value>Просчет для бизнесс-класса</value>
  </data>
  <data name="ClassLuxCalculation" xml:space="preserve">
    <value>Просчет для класса люкс</value>
  </data>
  <data name="ClassMiddleCalculation" xml:space="preserve">
    <value>Просчет для среднего класса</value>
  </data>
  <data name="ClassMinivanCalculation" xml:space="preserve">
    <value>Просчет для минивенов</value>
  </data>
  <data name="ClassMultivanCalculation" xml:space="preserve">
    <value>Просчет для мультивенов</value>
  </data>
  <data name="ClassStandardCalculation" xml:space="preserve">
    <value>Просчет для стандартного класса</value>
  </data>
  <data name="LuxClass" xml:space="preserve">
    <value>Класс люкс</value>
  </data>
  <data name="MiddleClass" xml:space="preserve">
    <value>Средний класс</value>
  </data>
  <data name="MinivanClass" xml:space="preserve">
    <value>Минивены</value>
  </data>
  <data name="MultivanClass" xml:space="preserve">
    <value>Мультивены</value>
  </data>
  <data name="ChooseTheCar" xml:space="preserve">
    <value>Выбрать автомобиль</value>
  </data>
  <data name="StandardClass" xml:space="preserve">
    <value>Стандартный класс</value>
  </data>
  <data name="CalculatedIndividually" xml:space="preserve">
    <value>Расчитывается индивидуально. Просчет будет выслан на указанный Email</value>
  </data>
  <data name="AboutYou" xml:space="preserve">
    <value>О вас</value>
  </data>
  <data name="ContactPhone" xml:space="preserve">
    <value>Контактный телефон</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Эл. почта</value>
  </data>
  <data name="YourName" xml:space="preserve">
    <value>Имя, фамилия</value>
  </data>
  <data name="RequestSentMessage" xml:space="preserve">
    <value>Ваша заявка успешно отправлена.</value>
  </data>
  <data name="RequestWasSent" xml:space="preserve">
    <value>Запрос отправлен</value>
  </data>
</root>