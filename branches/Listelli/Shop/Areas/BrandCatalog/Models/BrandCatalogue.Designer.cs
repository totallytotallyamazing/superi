//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("shop_brandCatalogue", "FK_CatalogueImage_Brand", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shop.Areas.BrandCatalog.Models.Brand), "CatalogueImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Areas.BrandCatalog.Models.CatalogueImage))]
[assembly: EdmRelationshipAttribute("shop_brandCatalogue", "FK_CatalogueImage_CatalogueGroup", "CatalogueGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shop.Areas.BrandCatalog.Models.CatalogueGroup), "CatalogueImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shop.Areas.BrandCatalog.Models.CatalogueImage))]

#endregion

namespace Shop.Areas.BrandCatalog.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BrandCatalogue : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BrandCatalogue object using the connection string found in the 'BrandCatalogue' section of the application configuration file.
        /// </summary>
        public BrandCatalogue() : base("name=BrandCatalogue", "BrandCatalogue")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BrandCatalogue object.
        /// </summary>
        public BrandCatalogue(string connectionString) : base(connectionString, "BrandCatalogue")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BrandCatalogue object.
        /// </summary>
        public BrandCatalogue(EntityConnection connection) : base(connection, "BrandCatalogue")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Brand> Brands
        {
            get
            {
                if ((_Brands == null))
                {
                    _Brands = base.CreateObjectSet<Brand>("Brands");
                }
                return _Brands;
            }
        }
        private ObjectSet<Brand> _Brands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CatalogueGroup> CatalogueGroups
        {
            get
            {
                if ((_CatalogueGroups == null))
                {
                    _CatalogueGroups = base.CreateObjectSet<CatalogueGroup>("CatalogueGroups");
                }
                return _CatalogueGroups;
            }
        }
        private ObjectSet<CatalogueGroup> _CatalogueGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CatalogueImage> CatalogueImages
        {
            get
            {
                if ((_CatalogueImages == null))
                {
                    _CatalogueImages = base.CreateObjectSet<CatalogueImage>("CatalogueImages");
                }
                return _CatalogueImages;
            }
        }
        private ObjectSet<CatalogueImage> _CatalogueImages;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Brands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrands(Brand brand)
        {
            base.AddObject("Brands", brand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CatalogueGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCatalogueGroups(CatalogueGroup catalogueGroup)
        {
            base.AddObject("CatalogueGroups", catalogueGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CatalogueImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCatalogueImages(CatalogueImage catalogueImage)
        {
            base.AddObject("CatalogueImages", catalogueImage);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shop_brandCatalogue", Name="Brand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Brand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Brand object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="hasCatalogue">Initial value of the HasCatalogue property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static Brand CreateBrand(global::System.Int32 id, global::System.String name, global::System.Boolean hasCatalogue, global::System.Int32 sortOrder)
        {
            Brand brand = new Brand();
            brand.Id = id;
            brand.Name = name;
            brand.HasCatalogue = hasCatalogue;
            brand.SortOrder = sortOrder;
            return brand;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeoKeywords
        {
            get
            {
                return _SeoKeywords;
            }
            set
            {
                OnSeoKeywordsChanging(value);
                ReportPropertyChanging("SeoKeywords");
                _SeoKeywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeoKeywords");
                OnSeoKeywordsChanged();
            }
        }
        private global::System.String _SeoKeywords;
        partial void OnSeoKeywordsChanging(global::System.String value);
        partial void OnSeoKeywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeoDescription
        {
            get
            {
                return _SeoDescription;
            }
            set
            {
                OnSeoDescriptionChanging(value);
                ReportPropertyChanging("SeoDescription");
                _SeoDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeoDescription");
                OnSeoDescriptionChanged();
            }
        }
        private global::System.String _SeoDescription;
        partial void OnSeoDescriptionChanging(global::System.String value);
        partial void OnSeoDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Logo
        {
            get
            {
                return _Logo;
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.String _Logo;
        partial void OnLogoChanging(global::System.String value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasCatalogue
        {
            get
            {
                return _HasCatalogue;
            }
            set
            {
                OnHasCatalogueChanging(value);
                ReportPropertyChanging("HasCatalogue");
                _HasCatalogue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasCatalogue");
                OnHasCatalogueChanged();
            }
        }
        private global::System.Boolean _HasCatalogue;
        partial void OnHasCatalogueChanging(global::System.Boolean value);
        partial void OnHasCatalogueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_brandCatalogue", "FK_CatalogueImage_Brand", "CatalogueImage")]
        public EntityCollection<CatalogueImage> CatalogueImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CatalogueImage>("shop_brandCatalogue.FK_CatalogueImage_Brand", "CatalogueImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CatalogueImage>("shop_brandCatalogue.FK_CatalogueImage_Brand", "CatalogueImage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shop_brandCatalogue", Name="CatalogueGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CatalogueGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CatalogueGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static CatalogueGroup CreateCatalogueGroup(global::System.Int32 id, global::System.String name, global::System.Int32 sortOrder)
        {
            CatalogueGroup catalogueGroup = new CatalogueGroup();
            catalogueGroup.Id = id;
            catalogueGroup.Name = name;
            catalogueGroup.SortOrder = sortOrder;
            return catalogueGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_brandCatalogue", "FK_CatalogueImage_CatalogueGroup", "CatalogueImage")]
        public EntityCollection<CatalogueImage> CatalogueImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CatalogueImage>("shop_brandCatalogue.FK_CatalogueImage_CatalogueGroup", "CatalogueImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CatalogueImage>("shop_brandCatalogue.FK_CatalogueImage_CatalogueGroup", "CatalogueImage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shop_brandCatalogue", Name="CatalogueImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CatalogueImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CatalogueImage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static CatalogueImage CreateCatalogueImage(global::System.Int32 id, global::System.String image, global::System.Int32 sortOrder)
        {
            CatalogueImage catalogueImage = new CatalogueImage();
            catalogueImage.Id = id;
            catalogueImage.Image = image;
            catalogueImage.SortOrder = sortOrder;
            return catalogueImage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeepZoomFile
        {
            get
            {
                return _DeepZoomFile;
            }
            set
            {
                OnDeepZoomFileChanging(value);
                ReportPropertyChanging("DeepZoomFile");
                _DeepZoomFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeepZoomFile");
                OnDeepZoomFileChanged();
            }
        }
        private global::System.String _DeepZoomFile;
        partial void OnDeepZoomFileChanging(global::System.String value);
        partial void OnDeepZoomFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_brandCatalogue", "FK_CatalogueImage_Brand", "Brand")]
        public Brand Brand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("shop_brandCatalogue.FK_CatalogueImage_Brand", "Brand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("shop_brandCatalogue.FK_CatalogueImage_Brand", "Brand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Brand> BrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("shop_brandCatalogue.FK_CatalogueImage_Brand", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Brand>("shop_brandCatalogue.FK_CatalogueImage_Brand", "Brand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shop_brandCatalogue", "FK_CatalogueImage_CatalogueGroup", "CatalogueGroup")]
        public CatalogueGroup CatalogueGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CatalogueGroup>("shop_brandCatalogue.FK_CatalogueImage_CatalogueGroup", "CatalogueGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CatalogueGroup>("shop_brandCatalogue.FK_CatalogueImage_CatalogueGroup", "CatalogueGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CatalogueGroup> CatalogueGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CatalogueGroup>("shop_brandCatalogue.FK_CatalogueImage_CatalogueGroup", "CatalogueGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CatalogueGroup>("shop_brandCatalogue.FK_CatalogueImage_CatalogueGroup", "CatalogueGroup", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
